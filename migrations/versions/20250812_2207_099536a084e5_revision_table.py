"""revision table

Revision ID: 099536a084e5
Revises:
Create Date: 2025-08-12 22:07:45.940025

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "099536a084e5"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Step 1: Create new tables first
    op.create_table(
        "files",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("object_name", sa.String(length=512), nullable=False),
        sa.Column("content_type", sa.String(length=100), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("url", sa.String(length=1024), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("object_name"),
    )
    op.create_index(op.f("ix_files_filename"), "files", ["filename"], unique=False)
    op.create_index(op.f("ix_files_id"), "files", ["id"], unique=False)
    op.create_table(
        "forestry_area",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("abbreviation", sa.String(length=20), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "role_users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_role_users_id"), "role_users", ["id"], unique=False)
    op.create_table(
        "tokens",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=False),
        sa.Column("token", sa.String(length=255), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("revoked", sa.Boolean(), server_default="0", nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tokens_id"), "tokens", ["id"], unique=False)
    op.create_index(op.f("ix_tokens_token"), "tokens", ["token"], unique=False)
    op.create_index(op.f("ix_tokens_user_id"), "tokens", ["user_id"], unique=False)

    # Step 3: Handle data conversion for kups_acc_id before changing column type
    connection = op.get_bind()

    # Check if businesses table exists and has data
    try:
        result = connection.execute(sa.text("SELECT COUNT(*) FROM businesses WHERE kups_acc_id IS NOT NULL"))
        count = result.scalar()

        if count > 0:
            # Convert existing data to valid JSON format
            # First, handle empty or NULL values
            connection.execute(
                sa.text(
                    """
                UPDATE businesses
                SET kups_acc_id = '[]'
                WHERE kups_acc_id = '' OR kups_acc_id IS NULL
                """
                )
            )

            # Then handle numeric values (convert to JSON array)
            connection.execute(
                sa.text(
                    """
                UPDATE businesses
                SET kups_acc_id = CONCAT('["', kups_acc_id, '"]')
                WHERE kups_acc_id REGEXP '^[0-9]+$' AND kups_acc_id != '[]'
                """
                )
            )

            # Handle comma-separated values
            connection.execute(
                sa.text(
                    """
                UPDATE businesses
                SET kups_acc_id = CONCAT('["', REPLACE(kups_acc_id, ',', '","'), '"]')
                WHERE kups_acc_id REGEXP '^[0-9,]+$' AND kups_acc_id NOT LIKE '%[%' AND kups_acc_id NOT LIKE '%]%'
                """
                )
            )

            # For other values, wrap in JSON array
            connection.execute(
                sa.text(
                    """
                UPDATE businesses
                SET kups_acc_id = CONCAT('["', kups_acc_id, '"]')
                WHERE kups_acc_id NOT LIKE '%[%' AND kups_acc_id NOT LIKE '%]%' AND kups_acc_id != '[]'
                """
                )
            )

    except Exception as e:
        # If there's an error, log it but continue
        print(f"Warning: Data conversion error: {e}")
        # Set default value for all records
        connection.execute(sa.text("UPDATE businesses SET kups_acc_id = '[]'"))

    # Step 4: Continue with column alterations
    op.alter_column(
        "attachment",
        "attach_type",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        type_=sa.String(length=4),
        existing_nullable=False,
    )
    op.alter_column(
        "attachment", "create_by", existing_type=mysql.INTEGER(), type_=sa.CHAR(length=36), existing_nullable=False
    )
    op.alter_column(
        "attachment", "update_by", existing_type=mysql.INTEGER(), type_=sa.CHAR(length=36), existing_nullable=True
    )
    op.alter_column(
        "businesses",
        "kups_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=13),
        type_=sa.CHAR(length=36),
        comment="ID unik KUPS",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_status",
        existing_type=mysql.ENUM("Y", "N", charset="utf8mb3", collation="utf8mb3_general_ci"),
        comment="Status aktif KUPS",
        existing_nullable=False,
        existing_server_default=sa.text("'Y'"),
    )
    op.alter_column(
        "businesses",
        "kups_nama",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment="Nama KUPS",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "fore_kps_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=11),
        comment="ID kawasan perhutanan sosial",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_sk_no",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        comment="Nomor SK pembentukan",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_pembentukan",
        existing_type=mysql.YEAR(),
        type_=sa.Integer(),
        comment="Tahun pembentukan",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses", "kups_anggota", existing_type=mysql.INTEGER(), comment="Jumlah anggota", existing_nullable=False
    )
    op.alter_column(
        "businesses",
        "kups_nama_ketua",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        comment="Nama ketua KUPS",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_kontak_ketua",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        comment="Kontak ketua",
        existing_nullable=False,
    )

    # Step 5: Now safely alter kups_acc_id to JSON after data conversion
    op.alter_column(
        "businesses",
        "kups_acc_id",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        type_=sa.JSON(),
        comment="ID akun",
        existing_nullable=False,
    )

    op.alter_column(
        "businesses",
        "kups_latitude",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment="Latitude lokasi",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_longitude",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment="Longitude lokasi",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_modal_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        comment="ID modal",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_status_op_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment="ID status operasional",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_lama_op_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment="ID lama operasional",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_kelas_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment="ID kelas",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_valid",
        existing_type=mysql.ENUM("Y", "N", charset="utf8mb3", collation="utf8mb3_general_ci"),
        comment="Status validasi",
        existing_nullable=False,
        existing_server_default=sa.text("'N'"),
    )
    op.alter_column(
        "businesses",
        "kups_nama_pemberi_modal",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment="Nama pemberi modal",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "kups_bentuk_pemberian_modal",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment="Bentuk pemberian modal",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "kups_bentuk_pemberian_modal_lain",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment="Bentuk pemberian modal lainnya",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "kups_jangka_waktu_pelunasan",
        existing_type=mysql.INTEGER(),
        comment="Jangka waktu pelunasan modal",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "create_by",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        type_=sa.CHAR(length=36),
        comment="User yang membuat record",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "update_by",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        type_=sa.CHAR(length=36),
        comment="User yang mengupdate record",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "create_at",
        existing_type=mysql.DATETIME(),
        comment="Waktu pembuatan record",
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "businesses",
        "update_at",
        existing_type=mysql.DATETIME(),
        comment="Waktu update record",
        existing_nullable=True,
    )
    op.create_index(op.f("ix_businesses_kups_id"), "businesses", ["kups_id"], unique=False)
    op.alter_column(
        "core_navigation", "nav_parent", existing_type=mysql.TINYINT(), type_=sa.SmallInteger(), existing_nullable=True
    )
    op.alter_column(
        "core_navigation",
        "nav_url",
        existing_type=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        nullable=True,
    )
    op.alter_column(
        "core_navigation", "create_by", existing_type=mysql.INTEGER(), type_=sa.CHAR(length=36), nullable=True
    )
    op.alter_column(
        "core_navigation", "update_by", existing_type=mysql.INTEGER(), type_=sa.CHAR(length=36), existing_nullable=True
    )
    op.alter_column(
        "forestry",
        "fore_name",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        nullable=True,
    )
    op.alter_column(
        "forestry",
        "fore_skema_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment=None,
        existing_comment="skema ps",
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "kph_acc_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        type_=sa.CHAR(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_kh_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        type_=sa.JSON(),
        comment=None,
        existing_comment="fungsi kawasan",
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_pps_vertek",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        nullable=False,
        comment=None,
        existing_comment="status vertek",
    )
    op.alter_column(
        "forestry",
        "fore_pps_status",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment=None,
        existing_comment="status ps",
        existing_nullable=True,
    )
    op.alter_column(
        "forestry",
        "fore_sk_menlhk",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
    )
    op.alter_column(
        "forestry",
        "fore_pps_klhk",
        existing_type=mysql.YEAR(),
        type_=sa.CHAR(length=4),
        comment=None,
        existing_comment="tahun permohonan klhk pps",
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_kps_menlhk",
        existing_type=mysql.YEAR(),
        type_=sa.String(length=256),
        comment=None,
        existing_comment="tahun terbit sk menlhk",
        existing_nullable=True,
    )
    op.alter_column(
        "forestry",
        "create_by",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        type_=sa.CHAR(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "update_by",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        type_=sa.CHAR(length=36),
        existing_nullable=True,
    )
    op.alter_column(
        "forestry_land",
        "fore_kps_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=11),
        type_=sa.CHAR(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry_land",
        "land_area",
        existing_type=mysql.DOUBLE(asdecimal=True),
        type_=sa.Float(),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry_land", "create_by", existing_type=mysql.INTEGER(), type_=sa.CHAR(length=36), existing_nullable=False
    )
    op.alter_column(
        "forestry_land", "update_by", existing_type=mysql.INTEGER(), type_=sa.CHAR(length=36), existing_nullable=True
    )
    op.alter_column(
        "piaps",
        "acc_id",
        existing_type=mysql.CHAR(charset="latin1", collation="latin1_swedish_ci", length=16),
        type_=sa.CHAR(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "regional",
        "reg_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=10),
        type_=sa.CHAR(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "regional",
        "reg_parent",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=10),
        type_=sa.CHAR(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "regional",
        "reg_group",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=10),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column("regional", "create_by", existing_type=mysql.TINYINT(), type_=sa.CHAR(length=36), nullable=True)
    op.alter_column(
        "stat_businesses_class",
        "nama_kelas_kups",
        existing_type=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        type_=sa.String(length=64),
        existing_nullable=False,
    )
    op.alter_column(
        "stat_businesses_class",
        "id_kelas",
        existing_type=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        type_=sa.String(length=8),
        existing_nullable=False,
    )
    op.add_column("stat_businesses_operational", sa.Column("notes", sa.String(length=255), nullable=True))
    op.alter_column(
        "stat_businesses_operational",
        "id_operational",
        existing_type=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        type_=sa.CHAR(length=4),
        existing_nullable=False,
    )
    op.drop_column("stat_businesses_operational", "note")
    op.alter_column(
        "stat_forestry_pps_proses",
        "keterangan",
        existing_type=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        type_=sa.Text(),
        existing_nullable=True,
    )
    op.add_column("user_account", sa.Column("is_verified", sa.Boolean(), nullable=True))
    op.alter_column(
        "user_account",
        "acc_id",
        existing_type=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=16),
        type_=sa.String(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_name",
        existing_type=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        type_=sa.String(length=256),
        existing_nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_address",
        existing_type=mysql.TEXT(charset="utf8mb4", collation="utf8mb4_general_ci"),
        type_=sa.String(length=512),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_phone",
        existing_type=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=16),
        type_=sa.String(length=20),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_gender",
        existing_type=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=4),
        type_=sa.String(length=10),
        nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_agency_name",
        existing_type=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        type_=sa.String(length=256),
        nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_agency_type",
        existing_type=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=5),
        type_=sa.String(length=100),
        nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_file",
        existing_type=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=256),
        type_=sa.String(length=512),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_avatar",
        existing_type=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=256),
        type_=sa.String(length=512),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_email",
        existing_type=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        type_=sa.String(length=256),
        existing_nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_enable",
        existing_type=mysql.ENUM("Y", "N", charset="utf8mb4", collation="utf8mb4_general_ci"),
        type_=sa.CHAR(length=1),
        nullable=True,
        existing_server_default=sa.text("'N'"),
    )
    op.alter_column("user_account", "role_id", existing_type=mysql.INTEGER(), nullable=True)
    op.alter_column(
        "user_account",
        "create_by",
        existing_type=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=11),
        type_=sa.String(length=36),
        nullable=True,
        existing_server_default=sa.text("'signup'"),
    )
    op.alter_column(
        "user_account", "update_by", existing_type=mysql.INTEGER(), type_=sa.String(length=36), existing_nullable=True
    )
    op.alter_column(
        "user_account",
        "create_at",
        existing_type=mysql.DATETIME(),
        nullable=True,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.create_index(op.f("ix_user_account_acc_id"), "user_account", ["acc_id"], unique=False)
    op.create_unique_constraint(None, "user_account", ["acc_email"])
    op.alter_column(
        "user_permission",
        "permit_desc",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=512),
        type_=sa.JSON(),
        existing_nullable=False,
    )
    op.alter_column(
        "user_permission",
        "create_by",
        existing_type=mysql.INTEGER(),
        type_=sa.CHAR(length=36),
        existing_nullable=False,
    )
    op.alter_column(
        "user_permission", "update_by", existing_type=mysql.INTEGER(), type_=sa.CHAR(length=36), existing_nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_permission", "update_by", existing_type=sa.CHAR(length=36), type_=mysql.INTEGER(), existing_nullable=True
    )
    op.alter_column(
        "user_permission",
        "create_by",
        existing_type=sa.CHAR(length=36),
        type_=mysql.INTEGER(),
        existing_nullable=False,
    )
    op.alter_column(
        "user_permission",
        "permit_desc",
        existing_type=sa.JSON(),
        type_=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=512),
        existing_nullable=False,
    )
    op.drop_constraint(None, "user_account", type_="unique")
    op.drop_index(op.f("ix_user_account_acc_id"), table_name="user_account")
    op.alter_column(
        "user_account",
        "create_at",
        existing_type=mysql.DATETIME(),
        nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "user_account", "update_by", existing_type=sa.String(length=36), type_=mysql.INTEGER(), existing_nullable=True
    )
    op.alter_column(
        "user_account",
        "create_by",
        existing_type=sa.String(length=36),
        type_=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=11),
        nullable=False,
        existing_server_default=sa.text("'signup'"),
    )
    op.alter_column("user_account", "role_id", existing_type=mysql.INTEGER(), nullable=False)
    op.alter_column(
        "user_account",
        "acc_enable",
        existing_type=sa.CHAR(length=1),
        type_=mysql.ENUM("Y", "N", charset="utf8mb4", collation="utf8mb4_general_ci"),
        nullable=False,
        existing_server_default=sa.text("'N'"),
    )
    op.alter_column(
        "user_account",
        "acc_email",
        existing_type=sa.String(length=256),
        type_=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_avatar",
        existing_type=sa.String(length=512),
        type_=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=256),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_file",
        existing_type=sa.String(length=512),
        type_=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=256),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_agency_type",
        existing_type=sa.String(length=100),
        type_=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=5),
        nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_agency_name",
        existing_type=sa.String(length=256),
        type_=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_gender",
        existing_type=sa.String(length=10),
        type_=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=4),
        nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_phone",
        existing_type=sa.String(length=20),
        type_=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=16),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_address",
        existing_type=sa.String(length=512),
        type_=mysql.TEXT(charset="utf8mb4", collation="utf8mb4_general_ci"),
        existing_nullable=True,
    )
    op.alter_column(
        "user_account",
        "acc_name",
        existing_type=sa.String(length=256),
        type_=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "user_account",
        "acc_id",
        existing_type=sa.String(length=36),
        type_=mysql.CHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=16),
        existing_nullable=False,
    )
    op.drop_column("user_account", "is_verified")
    op.alter_column(
        "stat_forestry_pps_proses",
        "keterangan",
        existing_type=sa.Text(),
        type_=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        existing_nullable=True,
    )
    op.add_column(
        "stat_businesses_operational",
        sa.Column("note", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=True),
    )
    op.alter_column(
        "stat_businesses_operational",
        "id_operational",
        existing_type=sa.CHAR(length=4),
        type_=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        existing_nullable=False,
    )
    op.drop_column("stat_businesses_operational", "notes")
    op.alter_column(
        "stat_businesses_class",
        "id_kelas",
        existing_type=sa.String(length=8),
        type_=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "stat_businesses_class",
        "nama_kelas_kups",
        existing_type=sa.String(length=64),
        type_=mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
        existing_nullable=False,
    )
    op.alter_column("regional", "create_by", existing_type=sa.CHAR(length=36), type_=mysql.TINYINT(), nullable=False)
    op.alter_column(
        "regional",
        "reg_group",
        existing_type=sa.String(length=50),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "regional",
        "reg_parent",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "regional",
        "reg_id",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "piaps",
        "acc_id",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="latin1", collation="latin1_swedish_ci", length=16),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry_land", "update_by", existing_type=sa.CHAR(length=36), type_=mysql.INTEGER(), existing_nullable=True
    )
    op.alter_column(
        "forestry_land", "create_by", existing_type=sa.CHAR(length=36), type_=mysql.INTEGER(), existing_nullable=False
    )
    op.alter_column(
        "forestry_land",
        "land_area",
        existing_type=sa.Float(),
        type_=mysql.DOUBLE(asdecimal=True),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry_land",
        "fore_kps_id",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=11),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "update_by",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        existing_nullable=True,
    )
    op.alter_column(
        "forestry",
        "create_by",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_kps_menlhk",
        existing_type=sa.String(length=256),
        type_=mysql.YEAR(),
        comment="tahun terbit sk menlhk",
        existing_nullable=True,
    )
    op.alter_column(
        "forestry",
        "fore_pps_klhk",
        existing_type=sa.CHAR(length=4),
        type_=mysql.YEAR(),
        comment="tahun permohonan klhk pps",
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_sk_menlhk",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        nullable=True,
    )
    op.alter_column(
        "forestry",
        "fore_pps_status",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment="status ps",
        existing_nullable=True,
    )
    op.alter_column(
        "forestry",
        "fore_pps_vertek",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        nullable=True,
        comment="status vertek",
    )
    op.alter_column(
        "forestry",
        "fore_kh_id",
        existing_type=sa.JSON(),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        comment="fungsi kawasan",
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "kph_acc_id",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_skema_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment="skema ps",
        existing_nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_name",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        nullable=False,
    )
    op.alter_column(
        "forestry",
        "fore_kps_id",
        existing_type=sa.Integer(),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=11),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "core_navigation", "update_by", existing_type=sa.CHAR(length=36), type_=mysql.INTEGER(), existing_nullable=True
    )
    op.alter_column(
        "core_navigation", "create_by", existing_type=sa.CHAR(length=36), type_=mysql.INTEGER(), nullable=False
    )
    op.alter_column(
        "core_navigation",
        "nav_url",
        existing_type=mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
        nullable=False,
    )
    op.alter_column(
        "core_navigation", "nav_parent", existing_type=sa.SmallInteger(), type_=mysql.TINYINT(), existing_nullable=True
    )
    op.drop_index(op.f("ix_businesses_kups_id"), table_name="businesses")
    op.alter_column(
        "businesses",
        "update_at",
        existing_type=mysql.DATETIME(),
        comment=None,
        existing_comment="Waktu update record",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "create_at",
        existing_type=mysql.DATETIME(),
        comment=None,
        existing_comment="Waktu pembuatan record",
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "businesses",
        "update_by",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        comment=None,
        existing_comment="User yang mengupdate record",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "create_by",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        comment=None,
        existing_comment="User yang membuat record",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_jangka_waktu_pelunasan",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="Jangka waktu pelunasan modal",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "kups_bentuk_pemberian_modal_lain",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment=None,
        existing_comment="Bentuk pemberian modal lainnya",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "kups_bentuk_pemberian_modal",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment=None,
        existing_comment="Bentuk pemberian modal",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "kups_nama_pemberi_modal",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment=None,
        existing_comment="Nama pemberi modal",
        existing_nullable=True,
    )
    op.alter_column(
        "businesses",
        "kups_valid",
        existing_type=mysql.ENUM("Y", "N", charset="utf8mb3", collation="utf8mb3_general_ci"),
        comment=None,
        existing_comment="Status validasi",
        existing_nullable=False,
        existing_server_default=sa.text("'N'"),
    )
    op.alter_column(
        "businesses",
        "kups_kelas_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment=None,
        existing_comment="ID kelas",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_lama_op_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment=None,
        existing_comment="ID lama operasional",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_status_op_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        comment=None,
        existing_comment="ID status operasional",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_modal_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        comment=None,
        existing_comment="ID modal",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_longitude",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment=None,
        existing_comment="Longitude lokasi",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_latitude",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment=None,
        existing_comment="Latitude lokasi",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_acc_id",
        existing_type=sa.JSON(),
        type_=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment=None,
        existing_comment="ID akun",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_kontak_ketua",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16),
        comment=None,
        existing_comment="Kontak ketua",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_nama_ketua",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        comment=None,
        existing_comment="Nama ketua KUPS",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_anggota",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="Jumlah anggota",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_pembentukan",
        existing_type=sa.Integer(),
        type_=mysql.YEAR(),
        comment=None,
        existing_comment="Tahun pembentukan",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_sk_no",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
        comment=None,
        existing_comment="Nomor SK pembentukan",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "fore_kps_id",
        existing_type=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=11),
        comment=None,
        existing_comment="ID kawasan perhutanan sosial",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_nama",
        existing_type=mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
        comment=None,
        existing_comment="Nama KUPS",
        existing_nullable=False,
    )
    op.alter_column(
        "businesses",
        "kups_status",
        existing_type=mysql.ENUM("Y", "N", charset="utf8mb3", collation="utf8mb3_general_ci"),
        comment=None,
        existing_comment="Status aktif KUPS",
        existing_nullable=False,
        existing_server_default=sa.text("'Y'"),
    )
    op.alter_column(
        "businesses",
        "kups_id",
        existing_type=sa.CHAR(length=36),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=13),
        comment=None,
        existing_comment="ID unik KUPS",
        existing_nullable=False,
    )
    op.alter_column(
        "attachment", "update_by", existing_type=sa.CHAR(length=36), type_=mysql.INTEGER(), existing_nullable=True
    )
    op.alter_column(
        "attachment", "create_by", existing_type=sa.CHAR(length=36), type_=mysql.INTEGER(), existing_nullable=False
    )
    op.alter_column(
        "attachment",
        "attach_type",
        existing_type=sa.String(length=4),
        type_=mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
        existing_nullable=False,
    )
    op.create_table(
        "businesses_mitra",
        sa.Column("mitra_id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("acc_id", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=11), nullable=False),
        sa.Column(
            "kups_id", mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256), nullable=False
        ),
        sa.Column(
            "create_by", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=False
        ),
        sa.Column("create_at", mysql.DATETIME(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.PrimaryKeyConstraint("mitra_id"),
        mysql_default_charset="utf8mb3",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "businesses_service",
        sa.Column("jasa_id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kups_id", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=13), nullable=False),
        sa.Column("komoditas_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "jasa_nama", mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256), nullable=False
        ),
        sa.Column(
            "jasa_latitude",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "jasa_longitude",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "jasa_tipe_pengunjung_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
        ),
        sa.Column(
            "jasa_asal_pengunjung_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
        ),
        sa.Column("jasa_harga_tiket_hari", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("jasa_harga_sewa_parkir", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("jasa_harga_item_lain", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "jasa_keterangan_item_lain",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column(
            "create_by", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=False
        ),
        sa.Column("create_at", mysql.DATETIME(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column(
            "update_by", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=False
        ),
        sa.Column(
            "update_at", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=False
        ),
        sa.PrimaryKeyConstraint("jasa_id"),
        mysql_default_charset="utf8mb3",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "articles",
        sa.Column("article_id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "article_title",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
            nullable=False,
        ),
        sa.Column(
            "article_slug",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column("article_content", mysql.TEXT(charset="utf8mb3", collation="utf8mb3_general_ci"), nullable=False),
        sa.Column("article_enable", mysql.ENUM("Y", "N"), server_default=sa.text("'Y'"), nullable=False),
        sa.Column(
            "article_cover",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
            nullable=False,
        ),
        sa.Column("article_counter", mysql.BIGINT(), autoincrement=False, nullable=True),
        sa.Column(
            "create_by", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=False
        ),
        sa.Column(
            "update_by", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=True
        ),
        sa.Column("create_at", mysql.DATETIME(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("update_at", mysql.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("article_id"),
        mysql_default_charset="utf8mb3",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "stat_attachment",
        sa.Column(
            "attachment_id",
            mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128),
            nullable=False,
        ),
        sa.Column(
            "attachment_name",
            mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "attachment_data_from",
            mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=256),
            nullable=False,
        ),
        sa.Column("attachment_valid", mysql.ENUM("y", "n"), server_default=sa.text("'n'"), nullable=False),
        sa.Column("order", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("attachment_id"),
        mysql_collate="utf8mb4_general_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "adm",
        sa.Column("reg_id", mysql.CHAR(charset="latin1", collation="latin1_swedish_ci", length=10), nullable=False),
        sa.Column(
            "id_dagri", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=20), nullable=False
        ),
        sa.Column(
            "nama_nagdeskel",
            mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
            nullable=False,
        ),
        sa.Column("id_kec", mysql.CHAR(charset="latin1", collation="latin1_swedish_ci", length=10), nullable=False),
        sa.Column(
            "nama_kec", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=False
        ),
        sa.Column("id_kab", mysql.CHAR(charset="latin1", collation="latin1_swedish_ci", length=10), nullable=False),
        sa.Column(
            "nama_kab", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=False
        ),
        sa.Column(
            "id_prov", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=False
        ),
        sa.Column(
            "nama_prov", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=False
        ),
        sa.PrimaryKeyConstraint("reg_id"),
        mysql_default_charset="latin1",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "stat_businesses_prdk_panen",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "id_prdk_panen", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=False
        ),
        sa.Column(
            "name_prdk_panen",
            mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255),
            nullable=False,
        ),
        sa.Column("note", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        mysql_default_charset="latin1",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "stat_data_IG",
        sa.Column("id_IG", mysql.VARCHAR(charset="latin1", collation="latin1_swedish_ci", length=255), nullable=False),
        sa.Column("id_spatial", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id_IG"),
        mysql_default_charset="latin1",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "pendapatan",
        sa.Column("id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("tahun", mysql.YEAR(), nullable=True),
        sa.Column("pendapatan", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("selisih", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("persen", mysql.FLOAT(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        mysql_default_charset="latin1",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "businesses_product",
        sa.Column("prdk_id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("kups_id", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=13), nullable=False),
        sa.Column("komoditas_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "prdk_nama", mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256), nullable=False
        ),
        sa.Column("prdk_desc", mysql.TEXT(charset="utf8mb3", collation="utf8mb3_general_ci"), nullable=False),
        sa.Column("prdk_penerima_manfaat", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "prdk_made_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
            comment="cara menghasilkan",
        ),
        sa.Column(
            "prdk_latitude",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "prdk_longitude",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column("prdk_area_kelolaan", mysql.FLOAT(), nullable=False),
        sa.Column("prdk_area_rencana", mysql.FLOAT(), nullable=False),
        sa.Column(
            "prdk_area_produktif",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "prdk_area_satuan",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "prdk_panen_produksi",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "prdk_panen_satuan",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=128),
            nullable=False,
        ),
        sa.Column(
            "prdk_panen_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
            comment="frekuensi panen",
        ),
        sa.Column(
            "prdk_jenis_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
            comment="jenis dijual",
        ),
        sa.Column(
            "prdk_alat_tersedia",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "prdk_alat_ntersedia",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column("prdk_harga_jual", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "prdk_pembeli_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
            comment="jenis pembeli",
        ),
        sa.Column("prdk_pembeli_jumlah", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "prdk_penjualan_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
            comment="frekuensi penjualan",
        ),
        sa.Column(
            "prdk_export_id",
            mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=4),
            nullable=False,
            comment="status export",
        ),
        sa.Column(
            "prdk_export_tujuan",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "prdk_ketersediaan_bibit_bahan_baku",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column(
            "prdk_satuan_harga_jual",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column(
            "prdk_satuan_produk_terjual",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column(
            "prdk_pembeli_target",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column(
            "create_by", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=False
        ),
        sa.Column("create_at", mysql.DATETIME(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column(
            "update_by", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=16), nullable=True
        ),
        sa.Column("update_at", mysql.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("prdk_id"),
        mysql_default_charset="utf8mb3",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "komoditas",
        sa.Column("komoditas_id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "komoditas_nama",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=False,
        ),
        sa.Column(
            "komoditas_lokal",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column(
            "komoditas_latin",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column(
            "komoditas_jenis", mysql.CHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=8), nullable=False
        ),
        sa.Column("komoditas_desc", mysql.TEXT(charset="utf8mb3", collation="utf8mb3_general_ci"), nullable=True),
        sa.Column(
            "komoditas_photo",
            mysql.VARCHAR(charset="utf8mb3", collation="utf8mb3_general_ci", length=256),
            nullable=True,
        ),
        sa.Column("komoditas_status", mysql.ENUM("Y", "N"), server_default=sa.text("'N'"), nullable=False),
        sa.PrimaryKeyConstraint("komoditas_id"),
        mysql_default_charset="utf8mb3",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "core_parameter",
        sa.Column("param_id", mysql.INTEGER(unsigned=True), autoincrement=True, nullable=False),
        sa.Column(
            "param_name", mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128), nullable=False
        ),
        sa.Column("param_detail", mysql.TEXT(charset="utf8mb4", collation="utf8mb4_general_ci"), nullable=False),
        sa.Column(
            "param_file", mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=256), nullable=True
        ),
        sa.Column("param_type", mysql.ENUM("pdf", "img", "json"), nullable=True),
        sa.Column(
            "param_sign", mysql.VARCHAR(charset="utf8mb4", collation="utf8mb4_general_ci", length=128), nullable=False
        ),
        sa.Column("param_enable", mysql.ENUM("Y", "N"), nullable=False),
        sa.Column("param_sort", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("create_by", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("update_by", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("create_at", mysql.DATETIME(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("update_at", mysql.DATETIME(), nullable=True),
        sa.PrimaryKeyConstraint("param_id"),
        mysql_collate="utf8mb4_general_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.drop_index(op.f("ix_tokens_user_id"), table_name="tokens")
    op.drop_index(op.f("ix_tokens_token"), table_name="tokens")
    op.drop_index(op.f("ix_tokens_id"), table_name="tokens")
    op.drop_table("tokens")
    op.drop_index(op.f("ix_role_users_id"), table_name="role_users")
    op.drop_table("role_users")
    op.drop_table("forestry_area")
    op.drop_index(op.f("ix_files_id"), table_name="files")
    op.drop_index(op.f("ix_files_filename"), table_name="files")
    op.drop_table("files")
    # ### end Alembic commands ###
